"""Module importing test execution results into JIRA X-Ray test execution tickets"""

import json
import logging
import os
from pathlib import Path
import requests
from junitparser import JUnitXml
from jira_utils import firefox_browser, login_to_jira, get_cookies

cfg = {}
cfg["user"] = os.environ["XRAY_USER"]
cfg["password"] = os.environ["XRAY_PASSWORD"]
cfg["jira_keys"] = os.environ["XRAY_KEYS"]
cfg["jira_url"] = os.environ["XRAY_BASE_URL"]

FILENAME = 'junit.xml'
FILENAME2 = 'results.json'

xml = JUnitXml()
# Merge JUnit reports together
print(':: Merging JUnit reports')
for path in Path('reports').glob('**/*.xml'):
    print('Merging '+str(path))
    xml += JUnitXml.fromfile(path)
xml.write(FILENAME)

# Create Firefox browser
firefox_profile, browser, _ = firefox_browser()

try:
    # Login to Jira/XRay
    login_to_jira(browser, cfg["jira_url"], cfg["user"], cfg["password"])

    # Import JUnit test execution results generated by behave
    print(":: Importing test execution results into XRay")

    # Enabling debugging at http.client level (requests->urllib3->http.client)
    # you will see the REQUEST, including HEADERS and DATA, and RESPONSE with HEADERS but without DATA.
    # the only thing missing will be the response.body which is not logged.
    try:  # for Python 3
        from http.client import HTTPConnection
    except ImportError:
        from httplib import HTTPConnection
    HTTPConnection.debuglevel = 1

    logging.basicConfig()  # need to initialize logging, otherwise you will not see anything from requests
    logging.getLogger().setLevel(logging.DEBUG)
    requests_log = logging.getLogger("urllib3")
    requests_log.setLevel(logging.DEBUG)
    requests_log.propagate = True

    # https://docs.getxray.app/display/XRAY/Import+Execution+Results+-+REST#ImportExecutionResultsREST-JUnitXMLresults
#    with open(FILENAME, 'rb') as file:
#        r = requests.post(cfg["jira_url"] +
#                          "rest/raven/1.0/import/execution/junit?testExecKey=" + cfg["jira_keys"],
#                          files={'file': (FILENAME, file, 'text/xml')},
#                          cookies=get_cookies(browser), timeout=30)
#        r.raise_for_status()

    # https://docs.getxray.app/display/XRAY/Import+Execution+Results+-+REST#ImportExecutionResultsREST-BehaveJSONresults
    with open('reports/' + FILENAME2, 'rb') as file:
        r = requests.post(cfg["jira_url"] + "rest/raven/1.0/import/execution/behave",
                          json=json.load(file), cookies=get_cookies(browser), timeout=30)
        r.raise_for_status()

finally:
    print(":: Exiting")
    browser.quit()
